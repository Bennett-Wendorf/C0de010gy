import React from "react";

import { ImageListItem, ImageListItemBar } from "@mui/material";
import PropTypes from "prop-types";
import get from "lodash/get";

const tileWidth = 136
const tileHeight = 205

const gridListTileStyles = (theme) => ({
  // width: ({ tileWidth }) => `${getDimension(tileWidth)}px !important`,
  // height: ({ tileHeight }) => `${getDimension(tileHeight)}px !important`,
  // [theme.breakpoints.only("xl")]: {
  //   width: ({ tileWidth }) => `${getDimension(tileWidth, "xl")}px !important`,
  //   height: ({ tileHeight }) =>
  //     `${getDimension(tileHeight, "xl")}px !important`,
  // },
  // [theme.breakpoints.only("lg")]: {
  //   width: ({ tileWidth }) => `${getDimension(tileWidth, "lg")}px !important`,
  //   height: ({ tileHeight }) =>
  //     `${getDimension(tileHeight, "lg")}px !important`,
  // },
  // [theme.breakpoints.only("sm")]: {
  //   width: ({ tileWidth }) => `${getDimension(tileWidth, "sm")}px !important`,
  //   height: ({ tileHeight }) =>
  //     `${getDimension(tileHeight, "sm")}px !important`,
  // },
  // [theme.breakpoints.only("xs")]: {
  //   width: ({ tileWidth }) => `${getDimension(tileWidth, "xs")}px !important`,
  //   height: ({ tileHeight }) =>
  //     `${getDimension(tileHeight, "xs")}px !important`,
  // },
})

const gridListTileContentStyles = {
  // borderRadius: "10px",
}

const gridListTileBarRootStyles = (theme) => ({
  // [theme.breakpoints.down("xs")]: {
  //   height: "2rem",
  // },
})

const gridListTileBarTitleStyles = (theme) => ({
  fontSize: "0.8rem",
  lineHeight: "1.1rem",
  whiteSpace: "normal",
  display: "-webkit-box",
  boxOrient: "vertical",
  lineClamp: 2,

  [theme.breakpoints.down("xs")]: {
    fontSize: "0.6rem",
    lineHeight: "0.8rem",
  },
})

const gridListTileBarTitleWrapStyles = (theme) => ({
  [theme.breakpoints.down("sm")]: {
    marginLeft: theme.spacing(1),
    marginRight: theme.spacing(1),
  },
})

// TODO: Remove this
// function getDimension(dim, breakpoint = "md", allowance = 0) {
//   var value = dim.xs || dim;
//   if (["sm", "md", "lg", "xl"].includes(breakpoint) && dim.sm) {
//     value = dim.sm;
//   }
//   if (["md", "lg", "xl"].includes(breakpoint) && dim.md) {
//     value = dim.md;
//   }
//   if (["lg", "xl"].includes(breakpoint) && dim.lg) {
//     value = dim.lg;
//   }
//   if (breakpoint === "xl" && dim.xl) {
//     value = dim.xl;
//   }
//   if (allowance > 0) {
//     value += allowance;
//   }
//   return value;
// }

export default function CarouselTile(props) {
  const {
    item,
    titleAttribute,
    handleTileClick,
  } = props;

  return (
    <Content
      item={item}
      handleTileClick={handleTileClick}
      titleAttribute={titleAttribute}
    />
  );
}

const Content = (props) => {
  const {
    item,
    handleTileClick,
    titleAttribute,
  } = props;
  
  return (
    <ImageListItem
      classes={{
        root: gridListTileStyles,
        item: gridListTileContentStyles,
      }}
      onClick={(event) => handleTileClick(item)}
    >
      <ImageListItemBar
        title={get(item, titleAttribute)}
        classes={{
          root: gridListTileBarRootStyles,
          title: gridListTileBarTitleStyles,
          titleWrap: gridListTileBarTitleWrapStyles,
        }}
      />
    </ImageListItem>
  );
};

CarouselTile.defaultProps = {
  handleTileClick: (item) => { },
};

CarouselTile.propTypes = {
  item: PropTypes.object.isRequired,
  titleAttribute: PropTypes.string.isRequired,
  handleTileClick: PropTypes.func,
};